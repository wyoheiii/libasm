
a.out:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	48 83 ec 08          	sub    rsp,0x8
    1004:	48 8b 05 dd 2f 00 00 	mov    rax,QWORD PTR [rip+0x2fdd]        # 3fe8 <__gmon_start__>
    100b:	48 85 c0             	test   rax,rax
    100e:	74 02                	je     1012 <_init+0x12>
    1010:	ff d0                	call   rax
    1012:	48 83 c4 08          	add    rsp,0x8
    1016:	c3                   	ret    

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 e2 2f 00 00    	push   QWORD PTR [rip+0x2fe2]        # 4008 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	ff 25 e4 2f 00 00    	jmp    QWORD PTR [rip+0x2fe4]        # 4010 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000001030 <free@plt>:
    1030:	ff 25 e2 2f 00 00    	jmp    QWORD PTR [rip+0x2fe2]        # 4018 <free@GLIBC_2.2.5>
    1036:	68 00 00 00 00       	push   0x0
    103b:	e9 e0 ff ff ff       	jmp    1020 <.plt>

0000000000001040 <printf@plt>:
    1040:	ff 25 da 2f 00 00    	jmp    QWORD PTR [rip+0x2fda]        # 4020 <printf@GLIBC_2.2.5>
    1046:	68 01 00 00 00       	push   0x1
    104b:	e9 d0 ff ff ff       	jmp    1020 <.plt>

0000000000001050 <memset@plt>:
    1050:	ff 25 d2 2f 00 00    	jmp    QWORD PTR [rip+0x2fd2]        # 4028 <memset@GLIBC_2.2.5>
    1056:	68 02 00 00 00       	push   0x2
    105b:	e9 c0 ff ff ff       	jmp    1020 <.plt>

0000000000001060 <malloc@plt>:
    1060:	ff 25 ca 2f 00 00    	jmp    QWORD PTR [rip+0x2fca]        # 4030 <malloc@GLIBC_2.2.5>
    1066:	68 03 00 00 00       	push   0x3
    106b:	e9 b0 ff ff ff       	jmp    1020 <.plt>

Disassembly of section .plt.got:

0000000000001070 <__cxa_finalize@plt>:
    1070:	ff 25 82 2f 00 00    	jmp    QWORD PTR [rip+0x2f82]        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1076:	66 90                	xchg   ax,ax

Disassembly of section .text:

0000000000001080 <_start>:
    1080:	31 ed                	xor    ebp,ebp
    1082:	49 89 d1             	mov    r9,rdx
    1085:	5e                   	pop    rsi
    1086:	48 89 e2             	mov    rdx,rsp
    1089:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
    108d:	50                   	push   rax
    108e:	54                   	push   rsp
    108f:	4c 8d 05 6a 03 00 00 	lea    r8,[rip+0x36a]        # 1400 <__libc_csu_fini>
    1096:	48 8d 0d 03 03 00 00 	lea    rcx,[rip+0x303]        # 13a0 <__libc_csu_init>
    109d:	48 8d 3d 8a 02 00 00 	lea    rdi,[rip+0x28a]        # 132e <main>
    10a4:	ff 15 36 2f 00 00    	call   QWORD PTR [rip+0x2f36]        # 3fe0 <__libc_start_main@GLIBC_2.2.5>
    10aa:	f4                   	hlt    
    10ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000010b0 <deregister_tm_clones>:
    10b0:	48 8d 3d 91 2f 00 00 	lea    rdi,[rip+0x2f91]        # 4048 <__TMC_END__>
    10b7:	48 8d 05 8a 2f 00 00 	lea    rax,[rip+0x2f8a]        # 4048 <__TMC_END__>
    10be:	48 39 f8             	cmp    rax,rdi
    10c1:	74 15                	je     10d8 <deregister_tm_clones+0x28>
    10c3:	48 8b 05 0e 2f 00 00 	mov    rax,QWORD PTR [rip+0x2f0e]        # 3fd8 <_ITM_deregisterTMCloneTable>
    10ca:	48 85 c0             	test   rax,rax
    10cd:	74 09                	je     10d8 <deregister_tm_clones+0x28>
    10cf:	ff e0                	jmp    rax
    10d1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    10d8:	c3                   	ret    
    10d9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

00000000000010e0 <register_tm_clones>:
    10e0:	48 8d 3d 61 2f 00 00 	lea    rdi,[rip+0x2f61]        # 4048 <__TMC_END__>
    10e7:	48 8d 35 5a 2f 00 00 	lea    rsi,[rip+0x2f5a]        # 4048 <__TMC_END__>
    10ee:	48 29 fe             	sub    rsi,rdi
    10f1:	48 c1 fe 03          	sar    rsi,0x3
    10f5:	48 89 f0             	mov    rax,rsi
    10f8:	48 c1 e8 3f          	shr    rax,0x3f
    10fc:	48 01 c6             	add    rsi,rax
    10ff:	48 d1 fe             	sar    rsi,1
    1102:	74 14                	je     1118 <register_tm_clones+0x38>
    1104:	48 8b 05 e5 2e 00 00 	mov    rax,QWORD PTR [rip+0x2ee5]        # 3ff0 <_ITM_registerTMCloneTable>
    110b:	48 85 c0             	test   rax,rax
    110e:	74 08                	je     1118 <register_tm_clones+0x38>
    1110:	ff e0                	jmp    rax
    1112:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    1118:	c3                   	ret    
    1119:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000001120 <__do_global_dtors_aux>:
    1120:	80 3d 21 2f 00 00 00 	cmp    BYTE PTR [rip+0x2f21],0x0        # 4048 <__TMC_END__>
    1127:	75 2f                	jne    1158 <__do_global_dtors_aux+0x38>
    1129:	55                   	push   rbp
    112a:	48 83 3d c6 2e 00 00 	cmp    QWORD PTR [rip+0x2ec6],0x0        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1131:	00 
    1132:	48 89 e5             	mov    rbp,rsp
    1135:	74 0c                	je     1143 <__do_global_dtors_aux+0x23>
    1137:	48 8b 3d 02 2f 00 00 	mov    rdi,QWORD PTR [rip+0x2f02]        # 4040 <__dso_handle>
    113e:	e8 2d ff ff ff       	call   1070 <__cxa_finalize@plt>
    1143:	e8 68 ff ff ff       	call   10b0 <deregister_tm_clones>
    1148:	c6 05 f9 2e 00 00 01 	mov    BYTE PTR [rip+0x2ef9],0x1        # 4048 <__TMC_END__>
    114f:	5d                   	pop    rbp
    1150:	c3                   	ret    
    1151:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    1158:	c3                   	ret    
    1159:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000001160 <frame_dummy>:
    1160:	e9 7b ff ff ff       	jmp    10e0 <register_tm_clones>

0000000000001165 <len>:
    1165:	55                   	push   rbp
    1166:	48 89 e5             	mov    rbp,rsp
    1169:	48 83 ec 10          	sub    rsp,0x10
    116d:	48 c7 45 f8 ff ff ff 	mov    QWORD PTR [rbp-0x8],0x7fffffff
    1174:	7f 
    1175:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    1179:	48 83 c0 03          	add    rax,0x3
    117d:	48 89 c7             	mov    rdi,rax
    1180:	e8 db fe ff ff       	call   1060 <malloc@plt>
    1185:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    1189:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    118d:	48 8d 50 02          	lea    rdx,[rax+0x2]
    1191:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    1195:	be 61 00 00 00       	mov    esi,0x61
    119a:	48 89 c7             	mov    rdi,rax
    119d:	e8 ae fe ff ff       	call   1050 <memset@plt>
    11a2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    11a6:	48 8d 50 02          	lea    rdx,[rax+0x2]
    11aa:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    11ae:	48 01 d0             	add    rax,rdx
    11b1:	c6 00 00             	mov    BYTE PTR [rax],0x0
    11b4:	48 8d 3d 49 0e 00 00 	lea    rdi,[rip+0xe49]        # 2004 <_IO_stdin_used+0x4>
    11bb:	b8 00 00 00 00       	mov    eax,0x0
    11c0:	e8 bb 01 00 00       	call   1380 <ft_strlen>
    11c5:	89 c6                	mov    esi,eax
    11c7:	48 8d 3d 37 0e 00 00 	lea    rdi,[rip+0xe37]        # 2005 <_IO_stdin_used+0x5>
    11ce:	b8 00 00 00 00       	mov    eax,0x0
    11d3:	e8 68 fe ff ff       	call   1040 <printf@plt>
    11d8:	48 8d 3d 2b 0e 00 00 	lea    rdi,[rip+0xe2b]        # 200a <_IO_stdin_used+0xa>
    11df:	b8 00 00 00 00       	mov    eax,0x0
    11e4:	e8 97 01 00 00       	call   1380 <ft_strlen>
    11e9:	89 c6                	mov    esi,eax
    11eb:	48 8d 3d 13 0e 00 00 	lea    rdi,[rip+0xe13]        # 2005 <_IO_stdin_used+0x5>
    11f2:	b8 00 00 00 00       	mov    eax,0x0
    11f7:	e8 44 fe ff ff       	call   1040 <printf@plt>
    11fc:	48 8d 3d 09 0e 00 00 	lea    rdi,[rip+0xe09]        # 200c <_IO_stdin_used+0xc>
    1203:	b8 00 00 00 00       	mov    eax,0x0
    1208:	e8 73 01 00 00       	call   1380 <ft_strlen>
    120d:	89 c6                	mov    esi,eax
    120f:	48 8d 3d ef 0d 00 00 	lea    rdi,[rip+0xdef]        # 2005 <_IO_stdin_used+0x5>
    1216:	b8 00 00 00 00       	mov    eax,0x0
    121b:	e8 20 fe ff ff       	call   1040 <printf@plt>
    1220:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    1224:	48 89 c7             	mov    rdi,rax
    1227:	b8 00 00 00 00       	mov    eax,0x0
    122c:	e8 4f 01 00 00       	call   1380 <ft_strlen>
    1231:	89 c6                	mov    esi,eax
    1233:	48 8d 3d cb 0d 00 00 	lea    rdi,[rip+0xdcb]        # 2005 <_IO_stdin_used+0x5>
    123a:	b8 00 00 00 00       	mov    eax,0x0
    123f:	e8 fc fd ff ff       	call   1040 <printf@plt>
    1244:	be ff ff ff 7f       	mov    esi,0x7fffffff
    1249:	48 8d 3d bf 0d 00 00 	lea    rdi,[rip+0xdbf]        # 200f <_IO_stdin_used+0xf>
    1250:	b8 00 00 00 00       	mov    eax,0x0
    1255:	e8 e6 fd ff ff       	call   1040 <printf@plt>
    125a:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    125e:	48 89 c7             	mov    rdi,rax
    1261:	e8 ca fd ff ff       	call   1030 <free@plt>
    1266:	90                   	nop
    1267:	c9                   	leave  
    1268:	c3                   	ret    

0000000000001269 <cpy>:
    1269:	55                   	push   rbp
    126a:	48 89 e5             	mov    rbp,rsp
    126d:	48 83 ec 20          	sub    rsp,0x20
    1271:	c7 45 fa 63 63 63 63 	mov    DWORD PTR [rbp-0x6],0x63636363
    1278:	66 c7 45 fe 63 00    	mov    WORD PTR [rbp-0x2],0x63
    127e:	c7 45 f3 61 61 61 61 	mov    DWORD PTR [rbp-0xd],0x61616161
    1285:	66 c7 45 f7 61 61    	mov    WORD PTR [rbp-0x9],0x6161
    128b:	c6 45 f9 00          	mov    BYTE PTR [rbp-0x7],0x0
    128f:	c7 45 ec 62 62 62 62 	mov    DWORD PTR [rbp-0x14],0x62626262
    1296:	66 c7 45 f0 62 62    	mov    WORD PTR [rbp-0x10],0x6262
    129c:	c6 45 f2 00          	mov    BYTE PTR [rbp-0xe],0x0
    12a0:	48 8d 45 f3          	lea    rax,[rbp-0xd]
    12a4:	48 89 c6             	mov    rsi,rax
    12a7:	48 8d 3d 65 0d 00 00 	lea    rdi,[rip+0xd65]        # 2013 <_IO_stdin_used+0x13>
    12ae:	b8 00 00 00 00       	mov    eax,0x0
    12b3:	e8 88 fd ff ff       	call   1040 <printf@plt>
    12b8:	48 8d 55 ec          	lea    rdx,[rbp-0x14]
    12bc:	48 8d 45 f3          	lea    rax,[rbp-0xd]
    12c0:	48 89 d6             	mov    rsi,rdx
    12c3:	48 89 c7             	mov    rdi,rax
    12c6:	b8 00 00 00 00       	mov    eax,0x0
    12cb:	e8 80 00 00 00       	call   1350 <ft_strcpy>
    12d0:	89 c6                	mov    esi,eax
    12d2:	48 8d 3d 45 0d 00 00 	lea    rdi,[rip+0xd45]        # 201e <_IO_stdin_used+0x1e>
    12d9:	b8 00 00 00 00       	mov    eax,0x0
    12de:	e8 5d fd ff ff       	call   1040 <printf@plt>
    12e3:	48 8d 45 f3          	lea    rax,[rbp-0xd]
    12e7:	48 89 c6             	mov    rsi,rax
    12ea:	48 8d 3d 38 0d 00 00 	lea    rdi,[rip+0xd38]        # 2029 <_IO_stdin_used+0x29>
    12f1:	b8 00 00 00 00       	mov    eax,0x0
    12f6:	e8 45 fd ff ff       	call   1040 <printf@plt>
    12fb:	48 8d 45 ec          	lea    rax,[rbp-0x14]
    12ff:	48 89 c6             	mov    rsi,rax
    1302:	48 8d 3d 27 0d 00 00 	lea    rdi,[rip+0xd27]        # 2030 <_IO_stdin_used+0x30>
    1309:	b8 00 00 00 00       	mov    eax,0x0
    130e:	e8 2d fd ff ff       	call   1040 <printf@plt>
    1313:	48 8d 45 fa          	lea    rax,[rbp-0x6]
    1317:	48 89 c6             	mov    rsi,rax
    131a:	48 8d 3d 16 0d 00 00 	lea    rdi,[rip+0xd16]        # 2037 <_IO_stdin_used+0x37>
    1321:	b8 00 00 00 00       	mov    eax,0x0
    1326:	e8 15 fd ff ff       	call   1040 <printf@plt>
    132b:	90                   	nop
    132c:	c9                   	leave  
    132d:	c3                   	ret    

000000000000132e <main>:
    132e:	55                   	push   rbp
    132f:	48 89 e5             	mov    rbp,rsp
    1332:	b8 00 00 00 00       	mov    eax,0x0
    1337:	e8 29 fe ff ff       	call   1165 <len>
    133c:	b8 00 00 00 00       	mov    eax,0x0
    1341:	e8 23 ff ff ff       	call   1269 <cpy>
    1346:	b8 00 00 00 00       	mov    eax,0x0
    134b:	5d                   	pop    rbp
    134c:	c3                   	ret    
    134d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000001350 <ft_strcpy>:
    1350:	0f b6 0e             	movzx  ecx,BYTE PTR [rsi]
    1353:	48 89 f8             	mov    rax,rdi
    1356:	84 c9                	test   cl,cl
    1358:	74 18                	je     1372 <ft_strcpy.L4>
    135a:	31 d2                	xor    edx,edx

000000000000135c <ft_strcpy.L3>:
    135c:	88 0c 10             	mov    BYTE PTR [rax+rdx*1],cl
    135f:	48 83 c2 01          	add    rdx,0x1
    1363:	0f b6 0c 16          	movzx  ecx,BYTE PTR [rsi+rdx*1]
    1367:	84 c9                	test   cl,cl
    1369:	75 f1                	jne    135c <ft_strcpy.L3>
    136b:	48 01 c2             	add    rdx,rax
    136e:	c6 02 00             	mov    BYTE PTR [rdx],0x0
    1371:	c3                   	ret    

0000000000001372 <ft_strcpy.L4>:
    1372:	48 89 fa             	mov    rdx,rdi
    1375:	c6 02 00             	mov    BYTE PTR [rdx],0x0
    1378:	c3                   	ret    
    1379:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000001380 <ft_strlen>:
    1380:	55                   	push   rbp
    1381:	48 89 e5             	mov    rbp,rsp
    1384:	b8 00 00 00 00       	mov    eax,0x0
    1389:	eb 03                	jmp    138e <ft_strlen.L2>

000000000000138b <ft_strlen.L3>:
    138b:	48 ff c0             	inc    rax

000000000000138e <ft_strlen.L2>:
    138e:	80 3c 07 00          	cmp    BYTE PTR [rdi+rax*1],0x0
    1392:	75 f7                	jne    138b <ft_strlen.L3>
    1394:	5d                   	pop    rbp
    1395:	c3                   	ret    
    1396:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    139d:	00 00 00 

00000000000013a0 <__libc_csu_init>:
    13a0:	41 57                	push   r15
    13a2:	49 89 d7             	mov    r15,rdx
    13a5:	41 56                	push   r14
    13a7:	49 89 f6             	mov    r14,rsi
    13aa:	41 55                	push   r13
    13ac:	41 89 fd             	mov    r13d,edi
    13af:	41 54                	push   r12
    13b1:	4c 8d 25 30 2a 00 00 	lea    r12,[rip+0x2a30]        # 3de8 <__frame_dummy_init_array_entry>
    13b8:	55                   	push   rbp
    13b9:	48 8d 2d 30 2a 00 00 	lea    rbp,[rip+0x2a30]        # 3df0 <__init_array_end>
    13c0:	53                   	push   rbx
    13c1:	4c 29 e5             	sub    rbp,r12
    13c4:	48 83 ec 08          	sub    rsp,0x8
    13c8:	e8 33 fc ff ff       	call   1000 <_init>
    13cd:	48 c1 fd 03          	sar    rbp,0x3
    13d1:	74 1b                	je     13ee <__libc_csu_init+0x4e>
    13d3:	31 db                	xor    ebx,ebx
    13d5:	0f 1f 00             	nop    DWORD PTR [rax]
    13d8:	4c 89 fa             	mov    rdx,r15
    13db:	4c 89 f6             	mov    rsi,r14
    13de:	44 89 ef             	mov    edi,r13d
    13e1:	41 ff 14 dc          	call   QWORD PTR [r12+rbx*8]
    13e5:	48 83 c3 01          	add    rbx,0x1
    13e9:	48 39 dd             	cmp    rbp,rbx
    13ec:	75 ea                	jne    13d8 <__libc_csu_init+0x38>
    13ee:	48 83 c4 08          	add    rsp,0x8
    13f2:	5b                   	pop    rbx
    13f3:	5d                   	pop    rbp
    13f4:	41 5c                	pop    r12
    13f6:	41 5d                	pop    r13
    13f8:	41 5e                	pop    r14
    13fa:	41 5f                	pop    r15
    13fc:	c3                   	ret    
    13fd:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000001400 <__libc_csu_fini>:
    1400:	c3                   	ret    

Disassembly of section .fini:

0000000000001404 <_fini>:
    1404:	48 83 ec 08          	sub    rsp,0x8
    1408:	48 83 c4 08          	add    rsp,0x8
    140c:	c3                   	ret    
